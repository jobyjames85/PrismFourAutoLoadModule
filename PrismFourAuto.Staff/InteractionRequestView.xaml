<UserControl x:Class="PrismFourAuto.Staff.InteractionRequestView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
              xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:views="clr-namespace:PrismFourAuto.Staff"
             xmlns:prism="http://www.codeplex.com/prism"
             d:DesignHeight="300"
             d:DesignWidth="300"
             mc:Ignorable="d">
    <i:Interaction.Triggers>

        <!-- All the InteractionRequestTriggers here subscribe to the corresponding interaction requests through simple bindings -->
        <!-- In this case all of them raise a PopupWindowAction, but you can use other actions too -->

        <prism:InteractionRequestTrigger SourceObject="{Binding ConfirmationRequest, Mode=OneWay}">
            <!-- This PopupWindowAction does not have a custom view defined, therefore it will try to use a DefaultNotificationWindow -->
            <!-- which is a window used by default by Prism to shown INotification implementations -->
            <!-- That window will be show as a modal dialog and centered over this window -->
            <!--<prism:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True"/>-->
        </prism:InteractionRequestTrigger>

        <prism:InteractionRequestTrigger SourceObject="{Binding NotificationRequest, Mode=OneWay}">
            <!-- This PopupWindowAction does not have a custom view defined, therefore it will try to use a DefaultConfirmationWindow -->
            <!-- which is a window used by default by Prism to shown IConfirmation implementations -->
            <!-- That window will be show as a modal dialog and centered over this window -->
            <!--<prism:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True"/>-->
        </prism:InteractionRequestTrigger>

        <prism:InteractionRequestTrigger SourceObject="{Binding CustomPopupViewRequest, Mode=OneWay}">
            <!-- This PopupWindowAction has a custom view defined. When this action is executed the view will be shown inside a new window -->
            <!-- Take into account that the view is created only once and will be reused each time the action is executed -->
            <!--<prism:PopupWindowAction>
                <prism:PopupWindowAction.WindowContent>
                    <views:CustomPopupView />
                </prism:PopupWindowAction.WindowContent>
            </prism:PopupWindowAction>-->
        </prism:InteractionRequestTrigger>

        <prism:InteractionRequestTrigger SourceObject="{Binding ItemSelectionRequest, Mode=OneWay}">
            <!-- This PopupWindowAction has a custom view defined. When this action is executed the view will be shown inside a new window -->
            <!-- Take into account that the view and its view model are created only once and will be reused each time the action is executed -->
            <!--<prism:PopupWindowAction>
                <prism:PopupWindowAction.WindowContent>
                    <views:ItemSelectionView />
                </prism:PopupWindowAction.WindowContent>
            </prism:PopupWindowAction>-->
        </prism:InteractionRequestTrigger>

    </i:Interaction.Triggers>
    <StackPanel>
        <Button x:Name="temp"
                Margin="5"
                AutomationProperties.AutomationId="NotificationButton"
                Command="{Binding RaiseNotificationCommand}"
                Content="Raise Default Notification" />
        <Button Margin="5"
                AutomationProperties.AutomationId="ConfirmationButton"
                Command="{Binding RaiseConfirmationCommand}"
                Content="Raise Default Confirmation" />
        <Button Margin="5"
                AutomationProperties.AutomationId="CustomPopupButton"
                Command="{Binding RaiseCustomPopupViewCommand}"
                Content="Raise Custom Popup View Interaction" />
        <Button Margin="5"
                AutomationProperties.AutomationId="ItemSelectionButton"
                Command="{Binding RaiseItemSelectionCommand}"
                Content="Raise Item Selection Popup" />

        <TextBlock AutomationProperties.AutomationId="ResultTextBlock" Margin="5" FontWeight="Bold" Foreground="DarkRed" VerticalAlignment="Bottom" Text="{Binding InteractionResultMessage}"/>
    </StackPanel>
</UserControl>
